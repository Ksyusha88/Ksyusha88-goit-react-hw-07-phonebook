{"version":3,"sources":["Components/Form/form.module.css","Components/ContactList/ContactList.module.css","Components/ContactFilter/ContactFilter.module.css","Components/Container/Container.module.css","redux/contacts/actions.js","redux/contacts/operations.js","redux/contacts/selectors.js","Components/Form/index.jsx","Components/ContactList/ContactList.jsx","Components/ContactFilter/ContactFilter.jsx","Components/Container/Container.jsx","App.js","redux/contacts/reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","name","number","dispatch","contact","post","then","data","catch","error","contactId","delete","a","get","getFilter","state","contacts","filter","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","Form","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","evt","preventDefault","props","onAddContact","reset","this","className","style","form","onSubmit","label_text","htmlFor","form_input","type","onChange","id","pattern","title","required","add_button","Component","connect","contactsOperations","contactsSelectors","onDeleteContact","contactsOperetions","contactList","map","contactItem","contactName","deleteBtm","onClick","Container","children","App","fetchContact","addContact","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecae8db6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3UpH5\",\"label_text\":\"form_label_text__1C7mh\",\"form_input\":\"form_form_input__1gDDI\",\"add_button\":\"form_add_button__Gak9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__13kaL\",\"contactItem\":\"ContactList_contactItem__2PRLo\",\"contactName\":\"ContactList_contactName__1tZ_H\",\"deleteBtm\":\"ContactList_deleteBtm__suDTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFilter_form__3uevZ\",\"label_text\":\"ContactFilter_label_text__yIeJh\",\"form_input\":\"ContactFilter_form_input__2tKes\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3aqcw\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\n\r\nexport const filterContact = createAction('contacts/filterContact');\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError\r\n} from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4041';\r\n\r\nconst fetchContact = () => async dispatch =>{\r\n    dispatch(fetchContactRequest());\r\n    \r\ntry{\r\n    const {data} = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n} catch (error){\r\n    dispatch(fetchContactError(error));\r\n}\r\n};\r\n\r\nconst addContact = ({name, number}) => dispatch =>{\r\n    const contact = {\r\n        name,\r\n        number\r\n    };\r\n\r\ndispatch(addContactRequest);    \r\n\r\naxios\r\n.post('/contacts', contact)\r\n.then(({data}) => dispatch(addContactSuccess(data)))\r\n.catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId  => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId )))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n    addContact,\r\n    deleteContact,\r\n    fetchContact\r\n};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts =state => state.contacts.items;\r\n\r\n// const getVisibleContacts = state => {\r\n//     const contacts = getAllContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return contacts.filter(({name}) => \r\n//     name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n// };\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts,getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return contacts.filter(({name}) => \r\n        name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\nexport default{\r\n    getFilter,\r\n    getVisibleContacts\r\n};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport style from '../Form/form.module.css';\r\nimport contactsOperations from '../../redux/contacts/operations';\r\nimport { connect } from 'react-redux';\r\nimport contactsSelectors from '../../redux/contacts/selectors';\r\n\r\nclass Form extends Component {\r\n    state ={\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\nnameInputId = shortid.generate();\r\nnumberInputId = shortid.generate();\r\n\r\nhandleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n      };\r\n    \r\n      \r\nhandleSubmit = evt => {\r\n        evt.preventDefault();\r\n        this.props.onAddContact(this.state);\r\n        this.reset();\r\n      };\r\n\r\nreset =() =>{\r\n    this.setState({ name: '', number: '' });\r\n};\r\n\r\n    render (){\r\n        const { number, name } = this.state;\r\n        return(\r\n            <form className={style.form} onSubmit ={this.handleSubmit}>\r\n                               \r\n                <label className={style.label_text} htmlFor ={this.nameInputId}>\r\n                    Name <input className={style.form_input}  type=\"text\"\r\n                    onChange = {this.handleChange}\r\n                    value={name}\r\n                    name =\"name\"\r\n                    id = {this.nameInputId}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    />\r\n                </label>\r\n                \r\n                <label className={style.label_text} htmlFor ={this.numberInputId}>\r\n                    Number <input className={style.form_input} type=\"tell\"\r\n                    onChange = {this.handleChange}\r\n                    value={number}\r\n                    name =\"number\"\r\n                    id = {this.numberInputId}\r\n                    pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                    title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                    required\r\n                    />\r\n                </label>                \r\n                <button className={style.add_button} type=\"submit\"> Add contact </button>                   \r\n            </form>\r\n                )}\r\n        };\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    value:contactsSelectors.getFilter(state),\r\n});\r\n\r\n        const mapDispatchToProps = dispatch => ({\r\n            onAddContact: ({ name, number }) => dispatch(contactsOperations.addContact({name,number})),\r\n        })\r\n\r\n        // const mapDispatchToProps = dispatch => ({\r\n        //     onSubmit: text => dispatch(contactsOperations.addContact(text)),\r\n        // })\r\n\r\n\r\n        export default connect(null,mapDispatchToProps)(Form);","import { connect } from 'react-redux';\r\nimport style from '../ContactList/ContactList.module.css';\r\nimport contactsOperetions from '../../redux/contacts/operations';\r\nimport contactsSelectors from '../../redux/contacts/selectors';\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => (\r\n<ul className ={style.contactList}>\r\n    {contacts.map(({name, id, number}) =>(\r\n        <li key ={id} className = {style.contactItem}>\r\n            <p className = {style.contactName}>{name}\r\n                {': '}\r\n                {number}\r\n                </p>\r\n                <button className ={style.deleteBtm} onClick ={() => onDeleteContact(id)}>Delete</button>\r\n        </li>\r\n    )\r\n\r\n    )}\r\n</ul>\r\n)\r\n\r\n// const getVisibleContacts =(allContacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return allContacts.filter(({name}) => \r\n//     name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n// };\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts:contactsSelectors.getVisibleContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact:(id) => dispatch(contactsOperetions.deleteContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactList);","import style from '../ContactFilter/ContactFilter.module.css';\r\nimport {filterContact} from '../../redux/contacts/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst ContactFilter = ({value, onChange}) =>(\r\n            <form className={style.form}>\r\n                <label className={style.label_text}>\r\n                Phone book search\r\n                    <input className={style.form_input}\r\n                    type = \"text\"\r\n                    value = {value}\r\n                    name=\"text\"\r\n                    onChange ={onChange}\r\n                    />\r\n                </label>\r\n            </form>\r\n            \r\n);\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(filterContact(e.currentTarget.value)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactFilter);\r\n\r\n ","import style from '../Container/Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={style.Container}> {children} </div>\r\n  );\r\n  export default Container;","import { Component } from 'react';\r\nimport Form from './Components/Form/';\r\nimport ContactList from './Components/ContactList';\r\nimport ContactFilter from './Components/ContactFilter';\r\nimport Container from './Components/Container';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperetions from './redux/contacts/operations';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContact();\r\n  }\r\n\r\nrender (){\r\n\r\n  return(\r\n    <Container>\r\n      <h1>Phonebook</h1> \r\n      <Form onAddContact = {this.addContact}\r\n     />\r\n     <ContactFilter/>\r\n      <ContactList/>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContact: () => dispatch(contactsOperetions.fetchContact()),\r\n});\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n      addContactSuccess,\r\n      deleteContactSuccess,\r\n      filterContact,\r\n      fetchContactSuccess,\r\n} from './actions';\r\n\r\n\r\nconst contactBoock = [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n];\r\n\r\n\r\n\r\nconst items = createReducer(contactBoock, {\r\n    [fetchContactSuccess]: ( _ , {payload}) => payload,\r\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\r\n    [deleteContactSuccess]:(state, {payload}) => \r\n    state.filter(({id}) => id !== payload ),\r\n});\r\n\r\n\r\nconst filter = createReducer('', {\r\n    [filterContact]:( _ , {payload} ) => payload,\r\n    //поставила подчеркивание вместо state\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport contactReducer from './contacts/reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts:contactReducer,\r\n  },\r\n\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n//import { PersistGate } from 'redux-persist/integration/react'\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}